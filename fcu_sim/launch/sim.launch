<launch>

  <arg name="mav_name" default="shredder"/>
  <arg name="world_file" default="test_city.world"/>

 <!-- Set non-default parameters -->
 <rosparam subst_value="True">
  truth:          { use_vo_keyframes: false }

  joy_teleop:     { max_velocity: 0.8,
                    initial_desired_z: -1.0,
                    start_autonomous: true,
                    desired_state_topic: joy_desired_state }

  simple_planner: { world: 1,
                    pose_topic: $(arg mav_name)/ground_truth/transform,
                    kill_on_complete: true}

  velocity_planner: { desired_state_topic: planner_desired_state,
                      goal_topic: RN_goal }

  planner_toggle: { desired_state_topic: raw_desired_state }

  xbox:           { dev: /dev/input/js0,
                    deadzone: 0.15,
                    autorepeat_rate: 10}

  path_planner_cmu: { kg: 8.5, ko: -0.1,
                      c1: 1.0, c2: 0.25,
                      c3: 1.0, c4: 0.25,
                      max_velocity_command: 1.0 }

  obstacle_avoid: { max_velocity_command: 1.2,
                    integral_gain: 4.0,
                    memory_length: 25,
                    bun_radius: 0.9,
                    spring_constant: 2.5 }

  sim_reset: { model_name: $(arg mav_name) }
 </rosparam>

  <!--Joystick -->
  <node name="xbox"                pkg="joy"                 type="joy_node"/>
  <node name="joy_teleop"          pkg="ros_copter"        type="joy_teleop"/>

 <!--Control-->
 <rosparam command="load" file="$(find ros_copter)/params/gains.yaml"/>
 <node name="pid_controller"      pkg="ros_copter"    type="controller"/>


  <!-- Simulator -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find fcu_sim)/worlds/$(arg world_file)"/>
    <arg name="paused" value="true"/>
    <arg name="gui" value="true"/>
  </include>
  <include file="$(find fcu_sim)/launch/spawn_mav.launch">
    <arg name="mav_name"            value="$(arg mav_name)" />
    <arg name="model"               value="$(find fcu_sim)/urdf/$(arg mav_name)/$(arg mav_name)_base.xacro" />
    <arg name="enable_ground_truth" value="true" />
    <arg name="y"                   value="0"/>
    <arg name="z"                   value="1.0"/>
  </include>
  <!-- <node name="sim_reset" pkg="sim_reset" type="sim_reset_node"/> -->


  <!-- Autopilot -->
  <rosparam command="load" file="$(find attitude_controller)/param/$(arg mav_name).yaml"/>
  <node name="attitude_controller" pkg="attitude_controller" type="attitude_controller_node">
    <rosparam command="load" file="$(find fcu_sim)/param/$(arg mav_name).yaml"/>
    <remap from="odometry" to="$(arg mav_name)/ground_truth/odometry"/>
    <remap from="command/motor_speed" to="$(arg mav_name)/gazebo/command/motor_speed"/>
  </node>


 <!-- Visualization -->
 <!-- <node name="map_rviz" pkg="rviz" type="rviz" args="-d $(find relative_nav)/rviz/map_visualizer.rviz" /> -->
 <!-- <node name="simulator_rviz" pkg="rviz" type="rviz" args="-d $(find relative_nav)/rviz/FPV_map.rviz"/> -->
 <!-- <node name="rqt_graph"         pkg="rqt_graph" type="rqt_graph"/> -->

  <!--Record-->
<!--   <node name="record" pkg="rosbag" type="record" args="-o OA_collect_$(arg iter) /shredder/ground_truth/transform /RN_goal /desired_state /planner_desired_state /relative_state"/> -->

</launch>
