#!/usr/bin/env python
PACKAGE = "attitude_controller"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# PID
gen.add("roll_P", double_t, 0, "Proportional gain for roll", 0, 0, 1) # Default, Low, High
gen.add("roll_I", double_t, 0, "Integral gain for roll", 0, 0, 1)
gen.add("roll_D", double_t, 0, "Derivative gain for roll", 0, 0, 1)
gen.add("pitch_P", double_t, 0, "Proportional gain for pitch", 0, 0, 1) # Default, Low, High
gen.add("pitch_I", double_t, 0, "Integral gain for pitch", 0, 0, 1)
gen.add("pitch_D", double_t, 0, "Derivative gain for pitch", 0, 0, 1)
gen.add("yaw_rate_P", double_t, 0, "Proportional gain for yaw_rate", 0, 0, 1)
gen.add("yaw_rate_I", double_t, 0, "Integral gain for yaw_rate", 0, 0, 1)
gen.add("yaw_rate_D", double_t, 0, "Derivative gain for yaw_rate", 0, 0, .2)

# H infinity
gen.add("w1", double_t, 0, "w1 gain for H-infinity Controller", 0, 0, 5)
gen.add("w2", double_t, 0, "w2 gain for H-infinity Controller", 0, 0, 5)
gen.add("w3", double_t, 0, "w3 gain for H-infinity Controller", 0, 0, 15)
gen.add("wu", double_t, 0, "w4 gain for H-infinity Controller", 0, 0, 5)



controller_enum = gen.enum([ gen.const("PID",      int_t, 0, "use PID Controller"),
                       gen.const("HInf",     int_t, 1, "use HInf Controller")],
                     "An enum to set size")

gen.add("controller", int_t, 0, "Controller Type", 0, 0, 1, edit_method=controller_enum)

exit(gen.generate(PACKAGE, "attitude_controller", "Gain")) # Creates GainConfig.h (same name as file)
